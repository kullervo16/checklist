displayName: "Openshift V2 : move application"
description: "Move an application to another gear type"
tags: 
    - "move"
    - "deployment"
    - "fromTemplate"
template: /deployment/move
specificTagSet: true
uniqueTagcombination: true
steps:
  - id: "checkout"
    responsible: "middleware"
    action: "odt checkout [application] -n [domain]"
    state: "UNKNOWN"
    weight: "1"
    check: "application folder exists"
  - id: "backup"
    responsible: "middleware"
    action: "tar -vczf [application name].tgz [application folder]"
    state: "UNKNOWN"
    weight: "1"
    check: "no errors, file exists"
  - id: "rename"
    responsible: "middleware"
    action: "rename the folder to [application]_old"
    state: "UNKNOWN"
    weight: "1"
  - id: "getOldDetails"
    responsible: "middleware"
    action: "rhc app-show [application] -n [domain] --gears. Save the output. The UUID especially"
    state: "UNKNOWN"
    weight: "1"
    check: "the UUID of the old [application] has been saved somewhere"
  - id: "deleteApplication"
    responsible: "middleware"
    action: "rhc app-delete  [application] -n [domain]"
    state: "UNKNOWN"
    weight: "1"
    check: "redoing the rhc app-show tells the application is gone"
  - id: "createApplication"
    responsible: "middleware"
    action: "create application the normal way (but with the new gear type !)"
    state: "UNKNOWN"
    weight: "1"
    check: 
      - step: application is visible in the webconsole
      - step: it's the proper geartype
      - step: scaling is active, current setting is 1
  - id: "checkoutNewGear"
    responsible: "middleware"
    action: "odt checkout [application] -n [domain]"
    state: "UNKNOWN"
    weight: "1"
    check: "directory exists and contains a pom.xml"
  - id: "copyProperties"
    responsible: "middleware"
    action: "cp [application]_old/odt.properties [application]/odt.properties"
    state: "UNKNOWN"
    weight: "1"
  - id: "odtInit"
    responsible: "middleware"
    action: "odt init"
    state: "UNKNOWN"
    weight: "1"
    check: 
      - step: in output -> MVN OK
      - step: ls -l -> no more pom.xml and no more src folder
      - step: rhc app-show <application> -n <domain>  --gears -> 2 gears, both with haproxy-1.4 in the gear list
  - id: "getNewRemote"
    responsible: "middleware"
    action: "in the [application] folder : git remote -v"
    state: "UNKNOWN"
    weight: "1"
  - id: "addNewRemote"
    responsible: "middleware"
    action: "in the [application]_old folder : git remote add -v new_gear [url from the previous step]"
    state: "UNKNOWN"
    weight: "1"
    check: "git remote -v shows the new remote"
  - id: "push"
    responsible: "middleware"
    action: "git push -force new_gear master"
    state: "UNKNOWN"
    weight: "1"
    check: "push succeeds and application deploys"
  - id: "getNewDetails"
    responsible: "middleware"
    action: "rhc app-show [application] -n [domain] --gears. Save the output."
    state: "UNKNOWN"
    weight: "1"
  - id: "changeRP"
    responsible: "middleware"
    action: "change the secondary gear in the RP : replace the gear UUID found in step getOldDetails by the one you found in the step getNewDetails"
    state: "UNKNOWN"
    weight: "1"
  - id: "checkLogs"
    responsible: "middleware"
    action: "check that the application logs are stored in the logserver at the right location"
    state: "UNKNOWN"
    weight: "1"
  - id: "linkOldFolder"
    responsible: "servers"
    action: "create a new softlink to the old application UUID so the old logs are still accessible"
    state: "UNKNOWN"
    weight: "1"
    check: "ln -s [oldUUID] [application]_old"
  - id: "linkLogsFolder"
    responsible: "servers"
    action: "create a new softlink to the new application UUID"
    state: "UNKNOWN"
    weight: "1"
    check: "ln -s [newUUID] [application]"
  - id: "verification"
    responsible: "development"
    action: "verify deployment"
    state: "UNKNOWN"
    weight: "1"
    check: 
      - step: no exceptions in the logs
      - step: monitoring XML is ok
      - step: application is working
      - step: if any, automatic DBCRs are executed (check dbcr_history table)
    milestone: 
      - name: verified
      - reached: false
